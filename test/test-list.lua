--------------------------------------------------------------------------------
-- test-list.lua: the list of all tests in the library
-- This file is generated by lua-nucleo library
-- Copyright (c) lua-nucleo authors(see file `COPYRIGHT` for the license)
--------------------------------------------------------------------------------

return
{
  {
    type = 'cases';
    path = 'test/cases/0010-algorithm.lua';
  };
  {
    type = 'cases';
    path = 'test/cases/0020-args.lua';
  };
  {
    type = 'cases';
    path = 'test/cases/0030-assert.lua';
  };
  {
    type = 'cases';
    path = 'test/cases/0040-checker.lua';
  };
  {
    type = 'cases';
    path = 'test/cases/0050-coro.lua';
  };
  {
    type = 'cases';
    path = 'test/cases/0051-pcall.lua';
  };
  {
    type = 'cases';
    path = 'test/cases/0060-deque.lua';
  };
  {
    type = 'cases';
    path = 'test/cases/0070-factory.lua';
  };
  {
    type = 'cases';
    path = 'test/cases/0080-functional.lua';
  };
  {
    type = 'low-level';
    path = 'test/low-level/0090-import.lua';
  };
  {
    type = 'low-level';
    path = 'test/low-level/0091-import-base_path.lua';
  };
  {
    type = 'low-level';
    path = 'test/low-level/0092-import-by-require.lua';
  };
  {
    type = 'cases';
    path = 'test/cases/0100-log.lua';
  };
  {
    type = 'cases';
    path = 'test/cases/0110-math.lua';
  };
  {
    type = 'cases';
    path = 'test/cases/0120-misc.lua';
  };
  {
    type = 'cases';
    path = 'test/cases/0130-priority_queue.lua';
  };
  {
    type = 'cases';
    path = 'test/cases/0140-random.lua';
  };
  {
    type = 'low-level';
    path = 'test/low-level/0150-strict.lua';
  };
  {
    type = 'cases';
    path = 'test/cases/0160-string.lua';
  };
  {
    type = 'suite';
    path = 'test/suite/0170-suite-simple.lua';
  };
  {
    type = 'suite';
    path = 'test/suite/0171-suite-full.lua';
  };
  {
    type = 'suite';
    path = 'test/suite/0172-suite-skip-slow.lua';
  };
  {
    type = 'suite';
    path = 'test/suite/0173-filter-test-names.lua';
  };
  {
    type = 'suite';
    path = 'test/suite/0174-suite-BROKEN_IF.lua';
  };
  {
    type = 'cases';
    path = 'test/cases/0180-table.lua';
  };
  {
    type = 'cases';
    path = 'test/cases/0190-table-utils.lua';
  };
  {
    type = 'cases';
    path = 'test/cases/0200-tdeepequals-basic-types.lua';
  };
  {
    type = 'cases';
    path = 'test/cases/0201-tdeepequals-basic-tables.lua';
  };
  {
    type = 'cases';
    path = 'test/cases/0202-tdeepequals-autogen.lua';
  };
  {
    type = 'cases';
    path = 'test/cases/0203-tdeepequals-recursive.lua';
  };
  {
    type = 'cases';
    path = 'test/cases/0204-tdeepequals-userdata-functions-threads.lua';
  };
  {
    type = 'cases';
    path = 'test/cases/0205-tdeepequals-other-functions.lua';
  };
  {
    type = 'cases';
    path = 'test/cases/0210-timed_queue.lua';
  };
  {
    type = 'cases';
    path = 'test/cases/0220-tserialize-basic.lua';
  };
  {
    type = 'cases';
    path = 'test/cases/0221-tserialize-autogen.lua';
  };
  {
    type = 'cases';
    path = 'test/cases/0230-tserialize-metatables.lua';
  };
  {
    type = 'cases';
    path = 'test/cases/0231-tserialize-recursive.lua';
  };
  {
    type = 'cases';
    path = 'test/cases/0240-type.lua';
  };
  {
    type = 'cases';
    path = 'test/cases/0250-typeassert.lua';
  };
  {
    type = 'cases';
    path = 'test/cases/0260-util-anim-interpolator.lua';
  };
  {
    type = 'cases';
    path = 'test/cases/0270-ensure.lua';
  };
  {
    type = 'cases';
    path = 'test/cases/0280-language.lua';
  };
  {
    type = 'cases';
    path = 'test/cases/0290-tstr.lua';
  };
  {
    type = 'cases';
    path = 'test/cases/0300-generate-test-list.lua';
  };
  {
    type = 'cases';
    path = 'test/cases/0310-sandbox.lua';
  };
  {
    type = 'cases';
    path = 'test/cases/0320-timestamp.lua';
  };
  {
    type = 'cases';
    path = 'test/cases/0325-datetime-utils.lua';
  };
  {
    type = 'cases';
    path = 'test/cases/0330-tpretty.lua';
  };
  {
    type = 'cases';
    path = 'test/cases/0331-prettifier.lua';
  };
  {
    type = 'low-level';
    path = 'test/low-level/0340-init.lua';
  };
  {
    type = 'low-level';
    path = 'test/low-level/0350-module.lua';
  };
  {
    type = 'cases';
    path = 'test/cases/0360-stack_with_factory.lua';
  };
  {
    type = 'cases';
    path = 'test/cases/0370-ordered_named_cat_manager.lua';
  };
  {
    type = 'cases';
    path = 'test/cases/0380-scoped_cat_tree_manager.lua';
  };
  {
    type = 'cases';
    path = 'test/cases/0390-code-globals.lua';
  };
  {
    type = 'cases';
    path = 'test/cases/0400-code-exports.lua';
  };
  {
    type = 'cases';
    path = 'test/cases/0410-code-profile.lua';
  };
  {
    type = 'cases';
    path = 'test/cases/0420-code-foreign-globals-luajit2.lua';
  };
  {
    type = 'cases';
    path = 'test/cases/0430-code-foreign-globals-lua5_1.lua';
  };
  {
    type = 'cases';
    path = 'test/cases/0440-require_and_declare.lua';
  };
  {
    type = 'cases';
    path = 'test/cases/0450-testing-decorators.lua';
  };
  {
    type = 'cases';
    path = 'test/cases/0460-diagnostics.lua';
  };
  {
    type = 'cases';
    path = 'test/cases/0470-dsl-dsl_loader.lua';
  };
  {
    type = 'cases';
    path = 'test/cases/0480-dsl-common_load_schema.lua';
  };
  {
    type = 'cases';
    path = 'test/cases/0490-dsl-dump_nodes.lua';
  };
  {
    type = 'cases';
    path = 'test/cases/0500-dsl-tagged-tree.lua';
  };
  {
    type = 'cases';
    path = 'test/cases/0510-dsl-walk_data_with_schema.lua';
  };
  {
    type = 'cases';
    path = 'test/cases/0520-dsl-path_based_walker.lua';
  };
  {
    type = 'cases';
    path = 'test/cases/0610-key_value_store_ophash.lua';
  };
  {
    type = 'cases';
    path = 'test/cases/0620-key_value_store_simple.lua';
  };
  {
    type = 'cases';
    path = 'test/cases/0630-key_value_store_sophisticated.lua';
  };
  {
    type = 'cases';
    path = 'test/cases/0640-quicksort.lua';
  };
  {
    type = 'cases';
    path = 'test/cases/0650-enumerator.lua';
  };
  {
    type = 'cases';
    path = 'test/cases/0650-legacy.lua';
  };
}
